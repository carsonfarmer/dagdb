(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{250:function(t,a,e){"use strict";e.r(a);var s=e(28),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"getting-started"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting Started")]),t._v(" "),e("p",[t._v("This tutorial will get you up and running with DagDB w/ JavaScript. If\nyou'd prefer to start with the command line head over to the "),e("a",{attrs:{href:""}},[t._v("getting started\nwith the command line page")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"install"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" Install")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("npm install dagdb\n")])])]),e("p",[t._v("That's it.")]),t._v(" "),e("h2",{attrs:{id:"create-a-database"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-a-database"}},[t._v("#")]),t._v(" Create a database")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dagdb "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dagdb'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" db "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" dagdb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dbname'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("This creates a new databases. The above example is suitable for the browser, where "),e("code",[t._v("dbname")]),t._v("\nis simply the name of the database and will be created in browser storage (IndexedDB).")]),t._v(" "),e("p",[t._v("In Node.js "),e("code",[t._v("dbname")]),t._v(" is the path to a file or directory. See "),e("a",{attrs:{href:""}},[t._v("Node.js storage options")]),t._v(" for\ndetails.")]),t._v(" "),e("h2",{attrs:{id:"open-a-database"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#open-a-database"}},[t._v("#")]),t._v(" Open a database")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" db "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" dagdb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dbname'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"live-databases"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#live-databases"}},[t._v("#")]),t._v(" Live databases")]),t._v(" "),e("p",[t._v('A "live" database is a remote database that is cached locally. As you read and write\nto the database it will pull data from the remote as needed. If the remote database\nchanges the live database will pull any updated data you had previously pulled from\nthe remote.')]),t._v(" "),e("p",[t._v("This is well suited for browsers, where local storage is limited and ultimately temporary. Since\nthe replication is effectively filtered based on what you've read, there's no need to\nconfigure explicit data filters or design your database to be replicated to unique user\nand device profiles.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" db "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" dagdb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("live")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://storage.mysite.com/db'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"reading-and-writing-data"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reading-and-writing-data"}},[t._v("#")]),t._v(" Reading and writing data")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" db"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" hello"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" db"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'key'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { hello: 'world' }")]),t._v("\ndb "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" db"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("When you create or open a database the object you get is a database transaction. This instance\nis permanently configured to the state of the database when you opened it. You can set new keys\nand retrive both newly added keys and keys that are already in the database, but those keys\nare not persisted into the database until it is commited ("),e("code",[t._v(".commit()")]),t._v(").")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v(".commit()")]),t._v(" method returns a "),e("em",[t._v("new")]),t._v(" database transaction configured to the now commited\nstate of the database.")]),t._v(" "),e("p",[t._v("You can store anything that can be encoded as JSON as well as binary data and streams.")]),t._v(" "),e("p",[t._v("For more information on storing different data types check out the "),e("a",{attrs:{href:""}},[t._v("value types")]),t._v(" page.")]),t._v(" "),e("p",[t._v("If you're interested in how to build data using links check out the "),e("a",{attrs:{href:""}},[t._v("linking")]),t._v(" section.")])])}),[],!1,null,null,null);a.default=n.exports}}]);